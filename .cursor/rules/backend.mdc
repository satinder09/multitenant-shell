---
description: 
globs: 
alwaysApply: false
---
# Backend Development (NestJS)

## Prisma & Database Management
- Always run `npx prisma generate` after schema changes
- Reset migrations when schema is out of sync: `npx prisma migrate reset`
- Use separate Prisma clients for master and tenant databases
- Validate tenant isolation - ensure no cross-tenant data leakage
- Handle database connection errors gracefully with proper fallbacks

## Authentication & Authorization
- JWT tokens must include tenant context for multi-tenant systems
- Validate permissions at both route and service levels
- Use guards consistently across protected endpoints
- Implement proper session management for impersonation scenarios
- Audit all authentication events for security compliance

## API Design
- Return consistent error responses with proper HTTP status codes
- Use DTOs for all input validation and type safety
- Implement proper CORS configuration for frontend integration
- Add comprehensive logging for debugging and monitoring
- Handle edge cases (missing data, invalid requests, etc.)

## Environment Configuration
- NEVER use hardcoded domains or ports - always use environment variables
- Use consistent environment variable naming across backend and frontend
- Backend environment variables: `BASE_DOMAIN`, `FRONTEND_PORT`, `PORT`
- Validate environment variables at startup with proper error messages
- Use fallback values for development (e.g., `|| 'lvh.me'`, `|| '3000'`)
- Update ALL references when changing domain/port configuration
- Test with different environment configurations to ensure flexibility
- Document required environment variables in README and setup guides

